# {{ ansible_managed }}

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

{% if bash_nohist %}
unset HISTFILE
{% endif %}

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL={{ bash_histcontrol }}

# append to the history file, don't overwrite it
{% if bash_histappend %}
shopt -s histappend
{% endif %}

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE={{ bash_histsize }}
HISTFILESIZE={{ bash_histfilesize }}

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
{% if bash_checkwinsize %}
shopt -s checkwinsize
{% endif %}

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
{% if bash_globstar %}
shopt -s globstar
{% else %}
#shopt -s globstar
{% endif %}

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
{% if bash_force_color_prompt %}
force_color_prompt=yes
{% else %}
#force_color_prompt=yes
{% endif %}

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [ "$color_prompt" = 'yes' ]; then
  fancy_prompt='{{ 'yes' if bash_fancy_prompt_prompt else 'no' }}';
  if [ "${fancy_prompt}" = 'no' ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]$(id -un)@$(hostname)\[\033[00m\]:\[\033[01;34m\]${PWD}\[\033[00m\]\$ '
  else
    e=$(printf "\033")
    end="$e[0m"

    red="$e[1;31m"
    green="$e[1;32m"
    yellow="$e[1;33m"
    blue="$e[1;34m"
    white="$e[1;37m"

    unset e

    if [ "$(id -un)" = 'root' ]; then
      PS1='${red}$(jot -s "" -b "." ${COLUMNS})${end}\n'
      PS1+='${blue}$(date "+%F %T")${end}\n'
      PS1+='${yellow}$(id -un)@$(hostname)${end}${white}:${end}${green}${PWD}${end}\n'
      PS1+='# '
    else
      PS1='${yellow}$(jot -s "" -b "." ${COLUMNS})${end}\n'
      PS1+='${blue}$(date "+%F %T")${end}\n'
      PS1+='${red}$(id -un)@$(hostname)${end}${white}:${end}${green}${PWD}${end}\n'
      PS1+='# '
    fi
  fi
  unset fancy_prompt
else
  PS1='${debian_chroot:+($debian_chroot)}$(id -un)@$(hostname):${PWD}\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
  PS1="\[\e]0;${debian_chroot:+($debian_chroot)}$(id -un)@$(hostname):${PWD}\a\]$PS1"
  ;;
*)
  ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

if [ -f /etc/bash_completion.d/virtualenvwrapper ]; then
  export WORKON_HOME=$HOME/.virtualenvs
  export PROJECT_HOME=$HOME/checkouts
  . /etc/bash_completion.d/virtualenvwrapper
fi

if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
  export WORKON_HOME=$HOME/.virtualenvs
  export PROJECT_HOME=$HOME/checkouts
  . /usr/local/bin/virtualenvwrapper.sh
fi
